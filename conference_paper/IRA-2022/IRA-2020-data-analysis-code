# Conference: International conference on Innovation for Resilient Agriculture (IRA) 2022
# Paper submitted: Production risk and efficiency: examining the influence of perceived environmental and market risks among rice farmers in Chiang Rai province, Northern Thailand.
# Author: Christopher Llones and Suneeporn Suwanmaneepong

# Libraries
library(tidyverse)
library(janitor)
library(sfaR)
library(likert)
library(kableExtra)
library(gtsummary)


# Likert plot: perceived effects of market and environmetnal risks
likert_items %>% 
     likert::likert(nlevels = 7) %>% 
     plot(ordered = F, centered = FALSE,
          plot.percents = FALSE,
          plot.percent.low = FALSE,
          plot.percent.neutral = FALSE,
          plot.percent.high = FALSE) + 
     scale_fill_viridis_d(option = "E",
                          labels = c("1 = Low effect", "2", "3", "4 = Neutral", 
                                    "5", "6", "7 = High effect"),
                          direction = -1) +
     scale_y_continuous(expand = c(0, 0)) +
     guides(fill = guide_legend(title = "Perceived effects:",
                                nrow = 1,
                                label.position = "top",
                                label.theme = element_text(size = 12))) +
     theme_minimal() +
     theme(plot.margin = margin(rep(15, 4)),
           panel.grid = element_blank(),
           axis.text.y = element_text(color = "grey40", size = 11, hjust = 0),
           legend.position = "top",
           legend.title = element_text(size = 12, margin = margin(r=5), vjust = 0.2))

## saving plot
ggsave("plot/effects_likert.jpg", width = 8, height = 5)


# production model with risk specification
risk_model <- 
sfacross(formula = log(prod) ~ log(seed_q) + log(fert_q) + log(fl_labor_hr) + log(hl_labor_hr)
                    + I(1/2 * (log(seed_q))^2) + I(1/2 * (log(fert_q))^2) + I(1/2 * (log(fl_labor_hr))^2) + I(1/2 * (log(hl_labor_hr))^2)
                    + I(log(seed_q) * log(fert_q)) + I(log(seed_q) * log(fl_labor_hr)) + I(log(seed_q) * log(hl_labor_hr)) 
                    + I(log(fert_q) * log(fl_labor_hr)) + I(log(fert_q) * log(hl_labor_hr)) 
                    + I(log(fl_labor_hr) * log(hl_labor_hr)),
         uhet = ~ fl_labor_hr + hl_labor_hr + pestq_dum + hh_mem + yrs_farming + land_own - 1,
         vhet = ~ seed_q + fert_q + fl_labor_hr + hl_labor_hr + credit2 + env_risks + mrkt_risks - 1, 
         data = mlip_data,
         method = "mla",
         udist = "hnormal",
         gradtol = 0.10)
         
         
## deriving the approx of the two-sided error
eff_risk_estimates <- 
     risk_model$dataTable %>% 
     mutate(eff = efficiencies(risk_model)$teBC,
            resid_e = mlResiduals,
            error_u = efficiencies(risk_model)$u,
            error_v = resid_e + error_u,
            var_error_v = error_v^2,
            var_error_u = error_u^2,
            total_var_error = var_error_v + var_error_u,
            share_var_v = var_error_v / total_var_error,
            share_Var_u = var_error_u / total_var_error) %>% 
     bind_cols(tibble(farm_loc = mlip_data$farm_loc))



# plotting overal efficiency scores

# geom_text label
eff_m_labs <- 
     tibble(x = mean(eff_risk_estimates$eff),
            x1 = mean(eff_risk_estimates[eff_risk_estimates$farm_loc == "Branch 1", ]$eff),
            x2 = mean(eff_risk_estimates[eff_risk_estimates$farm_loc == "Branch 2", ]$eff),
            x3 = mean(eff_risk_estimates[eff_risk_estimates$farm_loc == "Branch 3", ]$eff),
            risk_m = mean(eff_risk_estimates$share_var_v),
            y = 0.10)

eff_label <- 
     eff_m_labs %>% 
     mutate(lab_m = str_glue("Overal mean\nTE: {round(eff_m_labs$x, 3)}"),
            lab_m1 = str_glue("Branch 1 mean TE: {round(eff_m_labs$x1, 3)}"),
            lab_m2 = str_glue("Branch 2 mean TE: {round(eff_m_labs$x2, 3)}"),
            lab_m3 = str_glue("Branch 3 mean TE: {round(eff_m_labs$x3, 3)}"),
            lab_risk = str_glue("Overall mean\npercentage share\nto total production\nvariability: {round(eff_m_labs$risk_m, 4) * 100}%")
            )
     

# plotting overal efficiency scores
eff_risk_estimates %>% 
     ggplot(aes(x = eff, color = farm_loc)) +
     stat_ecdf(geom = "line", size = 1) +
     geom_vline(xintercept = mean(eff_risk_estimates$eff), size = 2, color = "grey60", alpha = 0.5) +
     geom_text(data = eff_label, aes(x=x, y=y, label = lab_m), size = 5, color = "grey20") +
     scale_x_continuous(limits = c(0, 1), breaks = seq(0.2, 1, 0.20)) +
     scale_color_manual(values = c("#264653", "#2a9d8f", "#e76f51")) +
     guides(color = guide_legend(nrow = 1, keywidth = unit(4, "line"), keyheight = unit(0.7, "line"), label.position = "top")) +
     theme_minimal() +
     theme(plot.margin = margin(rep(20, 4)),
           panel.grid = element_blank(),
           axis.title.y = element_text(size = 14, margin = margin(r=15), color = "grey20"),
           axis.title.x = element_text(size = 12, margin = margin(t=10), color = "grey20"),
           legend.title = element_blank(),
           legend.position = c(0.3, 0.6),
           legend.text = element_text(size = 12)) +
     labs(x = "TE index of E(exp(-u)|e)",
          y = "Empirical cumulative density function (ECDF)")

ggsave("plot/eff_by_branch.jpg", width = 7, height = 6)


# plotting overal risk percentage share
eff_risk_estimates %>% 
     ggplot(aes(x = share_var_v, color = farm_loc)) +
     stat_ecdf(geom = "step", size = 1) +
     geom_vline(xintercept = mean(eff_risk_estimates$share_var_v), size = 2, color = "grey60", alpha = 0.5) +
     geom_text(data = eff_label, aes(x=risk_m + 0.12,  y=y, label = lab_risk), size = 4.5, color = "grey20", lineheight = 0.95) +
     scale_x_continuous(limits = c(0.1, 0.9), breaks = seq(0, 1, 0.10)) +
     scale_color_manual(values = c("#264653", "#2a9d8f", "#e76f51")) +
     guides(color = guide_legend(nrow = 1, keywidth = unit(4, "line"), keyheight = unit(0.7, "line"),label.position = "bottom")) +
     theme_minimal() +
     theme(plot.margin = margin(rep(20, 4)),
           panel.grid = element_blank(),
           axis.title.y = element_text(size = 14, margin = margin(r=15), color = "grey20"),
           axis.title.x = element_text(size = 12, margin = margin(t=10), color = "grey20"),
           legend.title = element_blank(),
           legend.position = c(0.75, 0.34),
           legend.text = element_text(size = 12)) +
     labs(x = "Production risk share to total production variability.",
          y = "Empirical cumulative density function (ECDF)")

ggsave("plot/risk_by_branch.jpg",  width = 7, height = 6)


----
# Session info

sessionInfo()
R version 4.2.1 (2022-06-23 ucrt)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 22000)

Matrix products: default

locale:
[1] LC_COLLATE=English_Philippines.utf8  LC_CTYPE=English_Philippines.utf8    LC_MONETARY=English_Philippines.utf8
[4] LC_NUMERIC=C                         LC_TIME=English_Philippines.utf8    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] gtsummary_1.6.1  kableExtra_1.3.4 likert_1.3.5     xtable_1.8-4     sfaR_0.1.1       janitor_2.1.0    forcats_0.5.1   
 [8] stringr_1.4.0    dplyr_1.0.9      purrr_0.3.4      readr_2.1.2      tidyr_1.2.0      tibble_3.1.7     ggplot2_3.3.6   
[15] tidyverse_1.3.2 

loaded via a namespace (and not attached):
  [1] googledrive_2.0.0   colorspace_2.0-3    ellipsis_0.3.2      snakecase_0.11.0    fs_1.5.2           
  [6] rstudioapi_0.13     farver_2.1.1        bit64_4.0.5         gsl_2.1-7.1         fansi_1.0.3        
 [11] mvtnorm_1.1-3       lubridate_1.8.0     xml2_1.3.3          codetools_0.2-18    mnormt_2.1.0       
 [16] doParallel_1.0.17   cachem_1.0.6        knitr_1.39          Formula_1.2-4       jsonlite_1.8.0     
 [21] gt_0.6.0            broom_1.0.0         dbplyr_2.2.1        marqLevAlg_2.0.7    stabledist_0.7-1   
 [26] copula_1.1-0        compiler_4.2.1      httr_1.4.3          backports_1.4.1     assertthat_0.2.1   
 [31] Matrix_1.4-1        fastmap_1.1.0       gargle_1.2.0        cli_3.3.0           htmltools_0.5.2    
 [36] tools_4.2.1         coda_0.19-4         gtable_0.3.0        glue_1.6.2          reshape2_1.4.4     
 [41] primes_1.1.0        Rcpp_1.0.9          bbmle_1.0.25        jquerylib_0.1.4     cellranger_1.1.0   
 [46] vctrs_0.4.1         svglite_2.1.0       nlme_3.1-157        broom.helpers_1.8.0 iterators_1.0.14   
 [51] randtoolbox_2.0.1   psych_2.2.5         timeDate_4021.104   xfun_0.31           spatial_7.3-15     
 [56] rvest_1.0.2         lifecycle_1.0.1     rngWELL_0.10-7      googlesheets4_1.0.0 nleqslv_3.3.2      
 [61] MASS_7.3-57         zoo_1.8-10          scales_1.2.0        timeSeries_4021.104 vroom_1.5.7        
 [66] miscTools_0.6-26    hms_1.1.1           parallel_4.2.1      sandwich_3.0-2      yaml_2.3.5         
 [71] trustOptim_0.8.7.3  gridExtra_2.3       sass_0.4.1          emdbook_1.3.12      fBasics_3042.89.2  
 [76] bdsmatrix_1.3-6     stringi_1.7.8       highr_0.9           ucminf_1.1-4        pcaPP_2.0-2        
 [81] foreach_1.5.2       checkmate_2.1.0     commonmark_1.8.0    systemfonts_1.0.4   qrng_0.0-8         
 [86] rlang_1.0.3         pkgconfig_2.0.3     moments_0.14.1      evaluate_0.15       lattice_0.20-45    
 [91] labeling_0.4.2      bit_4.0.4           tidyselect_1.1.2    plyr_1.8.7          magrittr_2.0.3     
 [96] R6_2.5.1            generics_0.1.3      ADGofTest_0.3       DBI_1.1.3           pillar_1.8.0       
[101] haven_2.5.0         withr_2.5.0         pspline_1.0-19      modelr_0.1.8        crayon_1.5.1       
[106] utf8_1.2.2          tzdb_0.3.0          rmarkdown_2.14      maxLik_1.5-2        grid_4.2.1         
[111] readxl_1.4.0        webshot_0.5.3       reprex_2.0.1        digest_0.6.29       numDeriv_2016.8-1.1
[116] stats4_4.2.1        munsell_0.5.0       viridisLite_0.4.0   bslib_0.4.0 

